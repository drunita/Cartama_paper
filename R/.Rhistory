library(tidyverse)
library(gridExtra)
library(tibble)
library(ggplot2)
library(extrafont)
loadfonts(device = "win")
library(phyloseq)
library(scales)
library(ggpubr)
library(readxl)
library(vegan)
library(biomformat)
library(patchwork)
library(car)
library(ggimage)
library(ggtree)
library(TDbook)
library(aplot)
library(lemon)
library(grid, lib.loc = "C:/Program Files/R/R-4.2.0/library")
setwd("C:/Users/Dru/Desktop/Cartama_paper/microbial-ecology-avocado/Resultados_all")
path<-"C:/Users/Dru/Desktop/Cartama_paper/microbial-ecology-avocado/Resultados_all/Alfa/"
Alfa <- read_excel(paste(path,"Alfa.xlsx",sep=""))
head(Alfa)
c <- subset(Alfa, Alfa$Farm == "Escondida")$Chao
s <- subset(Alfa, Alfa$Farm == "Escondida")$Shannon_entropy
r <- subset(Alfa, Alfa$Farm == "Escondida")$Riqueza
f <- subset(Alfa, Alfa$Farm == "Escondida")$Faith_pd
e <- subset(Alfa, Alfa$Farm == "Escondida")$Evenness
damage <-subset(Alfa, Alfa$Farm == "Escondida")$Damage_level
#names(shannon)
#Check ANOVA assumptions
#Homogeneity of variance
leveneTest(c ~ damage)  #p-value > 0.05
#Shapiro-Wilk test
shapiro.test(c) #p-value > 0.05 is normal
#Independence
durbinWatsonTest(lm(c ~ damage)) #p-value > 0.05 they are independent
t.test(r~damage)
summary(glm(c~damage, family = quasipoisson()))
plot(glm(c~damage, family = poisson()))
plot(lm(c~damage))
#### Chao
c <-  ggplot(Alfa, aes(x = Damage_level, y = Chao)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
c <- c + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
c <- c +  xlab("") + ylab("Chao")+ylim(c(0, max(Alfa$Chao)*1.1))
c <- c + theme(axis.title =element_text(size=14,family = 'serif'))
c <- c +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
c <- c + theme(strip.text.x = element_text(size = 14,family = 'serif'))
c <- c + geom_signif(test="t.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Shannon_entropy
s <-  ggplot(Alfa, aes(x = Damage_level, y = Shannon_entropy)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
s <- s + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
s <- s +  xlab("") + ylab("Shannon entropy")+ylim(c(0, max(Alfa$Shannon_entropy)*1.1))
s <- s + theme(axis.title =element_text(size=14,family = 'serif'))
s <- s +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
s <- s + theme(strip.text.x = element_text(size = 14,family = 'serif'))
s <- s + geom_signif(test="t.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Riqueza
r <-  ggplot(Alfa, aes(x = Damage_level, y = Riqueza)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
r <- r + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
r <- r +  xlab("") + ylab("Richness")+ylim(c(0, max(Alfa$Riqueza)*1.1))
r <- r + theme(axis.title =element_text(size=14,family = 'serif'))
r <- r +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
r <- r + theme(strip.text.x = element_text(size = 14,family = 'serif'))
r <- r + geom_signif(test="t.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Faith_pd
f <-  ggplot(Alfa, aes(x = Damage_level, y = Faith_pd)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
f <- f + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
f <- f +  xlab("") + ylab("Faith pd")+ylim(c(0, max(Alfa$Faith_pd)*1.1))
f <- f + theme(axis.title =element_text(size=14,family = 'serif'))
f <- f +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
f <- f + theme(strip.text.x = element_text(size = 14,family = 'serif'))
f <- f + geom_signif(test="t.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
###evenness
e <-  ggplot(Alfa, aes(x = Damage_level, y = Evenness)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
e <- e + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
e <- e +  xlab("") + ylab("Evenness")+ylim(c(0, max(Alfa$Evenness)*1.1))
e <- e + theme(axis.title =element_text(size=14,family = 'serif'))
e <- e +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
e <- e + theme(strip.text.x = element_text(size = 14,family = 'serif'))
e <- e + geom_signif(test="t.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
alpha_plot<-grid.arrange(s + labs(tag = 'A'),c + labs(tag = 'B'), e + labs(tag = 'C'),f + labs(tag = 'D'), ncol=2,nrow=2)
ggsave("Figure2_alfa_new.jpg",plot=alpha_plot,dpi = 300,width = 6,height = 6,units = c("in"))
#### Chao
c <-  ggplot(Alfa, aes(x = Damage_level, y = Chao)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
c <- c + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
c <- c +  xlab("") + ylab("Chao")+ylim(c(0, max(Alfa$Chao)*1.1))
c <- c + theme(axis.title =element_text(size=14,family = 'serif'))
c <- c +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
c <- c + theme(strip.text.x = element_text(size = 14,family = 'serif'))
c <- c + geom_signif(test="kruskal.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Shannon_entropy
s <-  ggplot(Alfa, aes(x = Damage_level, y = Shannon_entropy)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
s <- s + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
s <- s +  xlab("") + ylab("Shannon entropy")+ylim(c(0, max(Alfa$Shannon_entropy)*1.1))
s <- s + theme(axis.title =element_text(size=14,family = 'serif'))
s <- s +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
s <- s + theme(strip.text.x = element_text(size = 14,family = 'serif'))
s <- s + geom_signif(test="kruskal.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Riqueza
r <-  ggplot(Alfa, aes(x = Damage_level, y = Riqueza)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
r <- r + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
r <- r +  xlab("") + ylab("Richness")+ylim(c(0, max(Alfa$Riqueza)*1.1))
r <- r + theme(axis.title =element_text(size=14,family = 'serif'))
r <- r +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
r <- r + theme(strip.text.x = element_text(size = 14,family = 'serif'))
r <- r + geom_signif(test="kruskal.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
#### Faith_pd
f <-  ggplot(Alfa, aes(x = Damage_level, y = Faith_pd)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
f <- f + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
f <- f +  xlab("") + ylab("Faith pd")+ylim(c(0, max(Alfa$Faith_pd)*1.1))
f <- f + theme(axis.title =element_text(size=14,family = 'serif'))
f <- f +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
f <- f + theme(strip.text.x = element_text(size = 14,family = 'serif'))
f <- f + geom_signif(test="kruskal.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
###evenness
e <-  ggplot(Alfa, aes(x = Damage_level, y = Evenness)) +
geom_bar(stat="summary", color="black", position=position_dodge(),
fill=rep(c("gray90","gray70"),2),fun = mean) +
stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), geom="errorbar",
color="black", width=0.2)
e <- e + geom_jitter()+ facet_wrap(~Farm)+ theme_classic()
e <- e +  xlab("") + ylab("Evenness")+ylim(c(0, max(Alfa$Evenness)*1.1))
e <- e + theme(axis.title =element_text(size=14,family = 'serif'))
e <- e +  theme(axis.text.x = element_text(face="bold",size=12, angle=0,
family ='serif'),
axis.text.y = element_text(face="bold",size=12, angle=0,family =
'serif'))
e <- e + theme(strip.text.x = element_text(size = 14,family = 'serif'))
e <- e + geom_signif(test="kruskal.test", comparisons = list(c("Mild", "Severe")), map_signif_level = T)
alpha_plot<-grid.arrange(s + labs(tag = 'A'),c + labs(tag = 'B'), e + labs(tag = 'C'),f + labs(tag = 'D'), ncol=2,nrow=2)
ggsave("Figure2_alfa_new.jpg",plot=alpha_plot,dpi = 300,width = 6,height = 6,units = c("in"))
ggsave("Figure2_alfa_new.jpg",plot=alpha_plot,dpi = 300,width = 6,height = 6,units = c("in"))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("cli")
install.packages("cli")
#library(tidyverse)
library(gridExtra)
library(readxl)
library(ggpubr)
library(glmmTMB)
library(bbmle)
library(DHARMa)
library(readxl)
library(tidyverse)
Lenticel_file <- read_excel("C:/Users/Dru/Desktop/Cartama_paper/files/Lenticel_Damage_Summary_All_Harvest.xlsx")
glimpse(Lenticel_file)
table(Lenticel_file$Cosecha)
table(Lenticel_file$UP)
f <-subset(Lenticel_file,Lenticel_file$UP=="Escondida")
f1 <- subset(Lenticel_file,Lenticel_file$UP=="Sinai")
table(f$Lote)
table(f$Arbol)
table(f1$Lote)
table(f1$Arbol)
summary(Lenticel_file$Severidad_0)
summary(Lenticel_file$Severidad_1)
summary(Lenticel_file$Incidencia_0)
summary(Lenticel_file$Incidencia_1)
Lenticel_file$...13<-NULL
Lenticel_file$...14<-NULL
Lenticel_file$...15<-NULL
Lenticel_file$Año<-NULL
Lenticel_file$cosecha<-NULL
Lenticel_file$Severidad_pedunculo<-NULL
Lenticel_file[Lenticel_file=="2019_p"]<-"2019_m"
Lenticel_file[Lenticel_file=="2020_p"]<-"2020_m"
Lenticel_file$Tree<-paste(Lenticel_file$UP,Lenticel_file$Arbol,sep="")
Lenticel_file$Arbol<-NULL
df <- Lenticel_file %>% drop_na(Severidad_0 , Incidencia_0)
colnames(df)[which(names(df) == "Cosecha")] <- "Harvest"
colnames(df)[which(names(df) == "UP")] <- "Farm"
colnames(df)[which(names(df) == "Lote")] <- "Plot"
colnames(df)[which(names(df) == "Fruta")] <- "Fruit"
colnames(df)[which(names(df) == "Severidad_0")] <- "Sev_0dph"
colnames(df)[which(names(df) == "Severidad_1")] <- "Sev_21dph"
colnames(df)[which(names(df) == "Incidencia_0")] <- "Inc_0dph"
colnames(df)[which(names(df) == "Incidencia_1")] <- "Inc_21dph"
df$Inc_ratio <- df$Inc_21dph-df$Inc_0dph
df$Sev_ratio <- df$Sev_21dph-df$Sev_0dph
glimpse(df)
summary(df$Sev_0dph)
#Datos_mat<-subset(Datos_mat,Datos_mat$Cosecha!="2020_t")
plot<-factor(df$Plot)
tree<-factor(df$Tree)
farm<-factor(df$Farm)
fpt<-farm:plot:tree
fp<-farm:plot
pt<- plot:tree
year<-factor(df$Harvest)
fruta<-factor(df$Fruit)
y<-df$Sev_0dph/100
modelo <- glmmTMB(y~farm*year +  (1|fp) + (1|fpt),ziformula=~1,family=beta_family())
modelo1 <- glmmTMB(y~farm*year + (1|farm) + (1|fp) + (1|fpt),ziformula=~1,family=beta_family())
#modelo1 <- glmmTMB(y~farm+year + (1|farm) + (1|fp) + (1|fpt),ziformula=~1,family=beta_family())
#modelo2 <- glmmTMB(y~year + (1|farm) + (1|fp) + (1|fpt),ziformula=~1,family=beta_family())
#modelo3 <- glmmTMB(y~farm + (1|farm) + (1|fp) + (1|fpt),ziformula=~1,family=beta_family())
#AICtab(modelo,modelo1,modelo2,modelo3, base=TRUE,weights = TRUE)
residual_simulation<-simulateResiduals(modelo)
plot(residual_simulation)
residual_simulation_years <-recalculateResiduals(residual_simulation, group = df$Tree)
plot(residual_simulation_years)
testDispersion(residual_simulation)
testZeroInflation(residual_simulation)
testCategorical(residual_simulation, catPred = df$Tree)
par(mfrow = c(1,2))
plotResiduals(residual_simulation, farm)
plotResiduals(residual_simulation, year)
sink("Sev_0h_new.txt")
print(summary(modelo))
sink()
sink("Sev_0h_new.txt")
print(summary(modelo))
sink()
modelo
summary(modelo)
